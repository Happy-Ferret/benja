##
# Copyright (c) 2016 Andrea Giammarchi
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom
# the Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##

export OS_KERNEL='linux-am33x'
export OS_HEADERS='linux-am33x-headers'
export OS_ARCHIVE='ArchLinuxARM-am33x-latest.tar.gz'
export OS_MAX_RESOLUTION=1280x720

# partition_sd /dev/mmblk0 3200M
partition_sd() {
  local DISK=$1
  local ROOT_SIZE=$2
  sudo dd if=/dev/zero of=$DISK bs=1024 count=8
  sync
  sleep 2
  if [ "$(uname)" = "Darwin" ]; then
    echo 'I HAVE NO IDEA WHAT TO DO'
    exit 1
  else
    sudo sh -c "echo -e 'o\nn\np\n1\n\n+${ROOT_SIZE}\nn\np\n2\n\n\nt\n2\nc\nw\nq\n' | fdisk ${DISK}" > /dev/null
  fi
  echo 'OK'
}

# returns ordered partitions
get_partitions() {
  local DISK=$1
  local POSSIBLEDISKS=$(ls ${DISK}*)
  local ROOT=""
  local WWW=""
  local CHOICE=""
  for CHOICE in $POSSIBLEDISKS; do
    if [ "$CHOICE" != "$DISK" ]; then
      if [ "$ROOT" = "" ]; then
        ROOT="$CHOICE"
      else
        WWW="$CHOICE"
      fi
    fi
  done

  echo "${ROOT} ${WWW}"
}

# format_sd /dev/mmblk0
format_sd() {
  local DISK=$1
  local ROOT=$2
  local WWW=$3

  if [ "$(uname)" = "Darwin" ]; then
    echo 'I HAVE NO IDEA WHAT TO DO'
    exit 1
  else
    yes | sudo mkfs.ext4 "$ROOT"
    sudo mkfs.vfat "$WWW"
  fi

  echo 'OK'

}

# install_os /dev/mmblk0 Archive.gz
install_os() {
  local ARCHIVE="$1"
  local DISK=$2
  local ROOT=$3
  local OLDPWD=$(pwd)

  mkdir -p root
  sudo mount $ROOT root
  sudo bsdtar -xpf "$ARCHIVE" -C root
  sync

  sudo dd if=root/boot/MLO of=$DISK count=1 seek=1 conv=notrunc bs=128k
  sudo dd if=root/boot/u-boot.img of=$DISK count=2 seek=1 conv=notrunc bs=384k
  sync

  mkdir -p ${OLDPWD}/builds
  cd ${OLDPWD}/builds
  if [ ! -d bb-kernel ]; then
    git clone https://github.com/RobertCNelson/bb-kernel.git
    cd bb-kernel/
    git checkout origin/am33x-v4.1 -b tmp-sgx
    ./sgx_create_package.sh
    sudo cp ./deploy/GFX_* ${OLDPWD}/root/
  fi
  cd ${OLDPWD}

}

# finalize installation
unmount_os() {
  local ROOT=$1
  sudo umount $ROOT
}

# install and configure the platform
configure_before() {
  tar xfv /GFX_*.tar.gz -C /
  cd /opt/gfxinstall/
  ./sgx-install.sh
  cd -
  pacman -S --needed --noconfirm weston
}

configure_after() {
  echo 'done'
}